<Modal @ref="@modal">
    <ModalBackdrop />
    <Form>
        <ModalContent>
            <ModalHeader>
                <ModalTitle>Redigér @user?.Email</ModalTitle>
                <CloseButton Clicked="@Cancel" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="validations" Mode="ValidationMode.Manual" Model="@request">
                    <Validation>
                        <Field>
                            <FieldLabel>Navn</FieldLabel>
                            <FieldBody>
                                <TextEdit @ref="nameTextEdit" @bind-Text="@request.FullName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <Validation>
                        <Field>
                            <FieldLabel>Telefon</FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@request.Phone">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </FieldBody>
                        </Field>
                    </Validation>
                    <CheckEdit @bind-Checked="@request.IsAdministrator" Disabled="@(!canEditIsAdministrator)">
                        <ChildContent>
                            Administrator
                        </ChildContent>
                    </CheckEdit>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Primary" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" Clicked="@Confirm">Opdatér bruger</Button>
                <Button Color="Color.Secondary" Clicked="@Cancel">Annullér</Button>
            </ModalFooter>
        </ModalContent>
    </Form>
</Modal>

@code
{

    private readonly UpdateUserRequest request = new UpdateUserRequest();
    private Modal modal = null!;
    private TextEdit nameTextEdit = null!;
    private Validations validations = null!;
    private User? user;
    private bool canEditIsAdministrator;

    [Parameter]
    public EventCallback<(int UserId, UpdateUserRequest Request)> OnConfirm { get; set; }

    public void Show(User user, bool canEditIsAdministrator)
    {
        this.user = user;
        request.FullName = user.FullName!;
        request.Phone = user.Phone!;
        request.IsAdministrator = user.IsAdministrator;
        request.IsPendingDelete = user.IsPendingDelete;
        this.canEditIsAdministrator = canEditIsAdministrator;
        modal.Show();
        Task.Run(() => nameTextEdit.Focus());
    }

    private Task Confirm()
    {
        if (!validations.ValidateAll())
            return Task.CompletedTask;

        validations.ClearAll();
        modal.Hide();
        var userId = user!.Id;
        user = null;
        return OnConfirm.InvokeAsync((userId, request));
    }

    private void Cancel()
    {
        modal.Hide();
        user = null;
    }

}
