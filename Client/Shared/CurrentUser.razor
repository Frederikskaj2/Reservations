@inject HttpClient HttpClient
@inject IAuthenticationStateProvider AuthenticationStateProvider
@inject ClientDataProvider ClientDataProvider
@inject NavigationManager NavigationManager

<div class="user-info">
    <AuthorizeView>
        <Authorizing>
            <text>Vent...</text>
        </Authorizing>
        <Authorized>
            <a href="@Urls.User">
                <img src="img/user.svg" />
            </a>
            <div>
                <span class="username">@context.User.Identity.Name</span>
                <a class="sign-out" @onclick="SignOut" href="#">Log ud</a>
            </div>
        </Authorized>
        <NotAuthorized>
            <a class="sign-in" href="@Urls.SignIn">Log ind</a>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code
{
    private async Task SignOut()
    {
        await HttpClient.PostAsync("user/sign-out", null);
        AuthenticationStateProvider.UpdateUser(AuthenticatedUser.UnknownUser);
        ClientDataProvider.ResetState();
        NavigationManager.NavigateTo("");
    }

}
