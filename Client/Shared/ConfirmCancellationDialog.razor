@inject FormattingService FormattingService
@inject ReservationsOptions ReservationsOptions

<Modal @ref="@modal">
    @if (reservation != null)
    {
        <ModalBackdrop />
        <ModalContent>
            <ModalHeader>
                <ModalTitle>Bekræft annullering af reservation</ModalTitle>
                <CloseButton Clicked="@OnCancel" />
            </ModalHeader>
            <ModalBody>
                <Field IsHorizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is4">Lokale</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is8">
                        <TextEdit IsPlaintext="true" Text="@reservation.Resource!.Name" />
                    </FieldBody>
                </Field>
                <Field IsHorizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is4">Fra</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is8">
                        <TextEdit IsPlaintext="true" Text="@GetCheckInTime()" />
                    </FieldBody>
                </Field>
                <Field IsHorizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is4">Til</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is8">
                        <TextEdit IsPlaintext="true" Text="@GetCheckOutTime()" />
                    </FieldBody>
                </Field>
                @if (reservation.Status == ReservationStatus.Confirmed)
                {
                    <Column ColumnSize="ColumnSize.Is8.Is4.WithOffset">
                        <Text>
                            Der tilbageholdes et gebyr på @FormattingService.FormatMoneyLong(ReservationsOptions.CancellationFee) når en reservation annulleres.
                        </Text>
                    </Column>
                }
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Danger" Clicked="@(() => OnConfirm.InvokeAsync(reservation))">Annllér reservation</Button>
                <Button Color="Color.Secondary" Clicked="@OnCancel">Fortryd</Button>
            </ModalFooter>
        </ModalContent>
    }
</Modal>

@code
{

    private Modal modal = null!;
    private Reservation? reservation;

    [Parameter]
    public EventCallback<Reservation> OnConfirm { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    public void Show(Reservation reservation)
    {
        this.reservation = reservation;
        modal.Show();
    }

    public void Hide()
    {
        modal.Hide();
    }

    private string GetCheckInTime() => reservation != null
        ? FormattingService.FormatCheckInTimeLong(reservation.Date)
        : string.Empty;

    private string GetCheckOutTime() => reservation != null
        ? FormattingService.FormatCheckOutTimeLong(reservation.Date.PlusDays(reservation.DurationInDays))
        : string.Empty;

}
