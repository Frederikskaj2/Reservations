@using System.Security.Claims
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider;

<div class="contents">
    <nav>
        <NavLink href="" class="nav-tab" Match="NavLinkMatch.All">
            <div class="logo">Frederikskaj&nbsp;2</div>
        </NavLink>
        <NavLink href="@Urls.Calendar" class="nav-tab">
            <div>Kalender</div>
        </NavLink>
        <NavLink href="@Urls.MyOrders" class="nav-tab">
            <div>Mine bestillinger</div>
        </NavLink>
        @if (user != null)
        {
            if (user.IsInRole(Roles.OrderHandling) || user.IsInRole(Roles.Payment) || user.IsInRole(Roles.Settlement))
            {
                <NavLink href="@Urls.Orders" class="nav-tab nav-administrator">
                    <div>Bestil­linger</div>
                </NavLink>
            }
            if (user.IsInRole(Roles.Payment))
            {
                <NavLink href="@Urls.PayOuts" class="nav-tab nav-administrator">
                    <div>Ud­betaling</div>
                </NavLink>
            }
            if (user.IsInRole(Roles.Bookkeeping))
            {
                <NavLink href="@Urls.Postings" class="nav-tab nav-administrator">
                    <div>Bog­føring</div>
                </NavLink>
            }
            if (user.IsInRole(Roles.Cleaning))
            {
                <NavLink href="@Urls.CleaningSchedule" class="nav-tab nav-administrator">
                    <div>Ren­gøring</div>
                </NavLink>
            }
            if (user.IsInRole(Roles.Settlement) || user.IsInRole(Roles.KeyCodes))
            {
                <NavLink href="@Urls.KeyCodes" class="nav-tab nav-administrator">
                    <div>Nøgleboks­koder</div>
                </NavLink>
            }
            if (user.IsInRole(Roles.OrderHandling))
            {
                <NavLink href="@Urls.HistoryReservations" class="nav-tab nav-administrator">
                    <div>Historik</div>
                </NavLink>
            }
            if (user.IsInRole(Roles.UserAdministration))
            {
                <NavLink href="@Urls.Users" class="nav-tab nav-administrator">
                    <div>Brugere</div>
                </NavLink>
            }
        }
        <CurrentUser />
    </nav>
    @Body
</div>

@code
{
    private ClaimsPrincipal? user;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationStateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authenticationState.User;
    }

    private async void OnAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        var authenticationState = await task;
        user = authenticationState.User;
        StateHasChanged();
    }
}