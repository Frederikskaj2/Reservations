@using Frederikskaj2.Reservations.Shared.Core
@using Frederikskaj2.Reservations.Shared.Web
<form>
    <Table>
        <TableHeader>
            <TableRow>
                <TableRowCell Class="border-top-0 no-margins" ColumnSpan="4">
                    <Validations @ref="validations" Mode="ValidationMode.Manual">
                        <Field>
                            <FieldLabel>Formål</FieldLabel>
                            <FieldBody>
                                <Validation Validator="@Validator.ValidateOwnerOrderDescription">
                                    <TextEdit
                                        @bind-Text="description"
                                        Placeholder="Oplys formålet med bestillingen"
                                        MaxLength="@ValidationRules.MaximumOwnerOrderDescriptionLength"
                                        Disabled="IsHistoryOrder">
                                        <Feedback>
                                            <ValidationError/>
                                        </Feedback>
                                    </TextEdit>
                                </Validation>
                            </FieldBody>
                        </Field>
                    </Validations>
                </TableRowCell>
            </TableRow>
            <TableRow>
                <TableHeaderCell Class="order-table-resource-column">Lokale</TableHeaderCell>
                <TableHeaderCell Class="order-table-time-column">Fra</TableHeaderCell>
                <TableHeaderCell Class="text-right">Nætter</TableHeaderCell>
                <TableHeaderCell Class="order-table-time-column text-right">Til</TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            @{
                var reservationIndex = 0;
                foreach (var reservation in Reservations ?? Enumerable.Empty<Reservation>())
                {
                    var index = reservationIndex;
                    var wasAlreadyCancelled = reservation.Status is ReservationStatus.Abandoned or ReservationStatus.Cancelled;
                    var isCancelled = cancelledReservations.Contains(index);
                    <TableRow Class="@(wasAlreadyCancelled || isCancelled ? "reservation-cancelled" : string.Empty)">
                        <TableRowCell>@resources![reservation.ResourceId].Name</TableRowCell>
                        <TableRowCell>@Formatter.FormatCheckInTimeShort(options!, reservation.Extent.Date)</TableRowCell>
                        <TableRowCell Class="text-right">@reservation.Extent.Nights</TableRowCell>
                        <TableRowCell Class="text-right">@Formatter.FormatCheckOutTimeShort(options!, reservation.Extent.Ends())</TableRowCell>
                        @if (!IsHistoryOrder)
                        {
                            <TableRowCell Class="border-0">
                                @if (!wasAlreadyCancelled)
                                {
                                    <Button Color="Color.Light" Size="Size.Small" Clicked="@(() => ToggleCancelReservation(index))">
                                        @if (!cancelledReservations.Contains(index))
                                        {
                                            <Icon Class="fa-trash text-danger"/>
                                        }
                                        else
                                        {
                                            <Icon Class="fa-undo text-success"/>
                                        }
                                    </Button>
                                }
                            </TableRowCell>
                        }
                    </TableRow>
                    reservationIndex += 1;
                }
            }
        </TableBody>
        <TableFooter>
            <TableRow>
                <TableRowCell ColumnSpan="2" Class="border-top-0">
                    <Check @bind-Checked="@isCleaningRequired" Disabled="IsHistoryOrder">Bestil rengøring</Check>
                </TableRowCell>
                @if (!IsHistoryOrder)
                {
                    <TableRowCell ColumnSpan="2" Class="border-top-0">
                        <Button
                            Class="float-right"
                            Color="@(cancelledReservations.Count > 0 ? Color.Danger : Color.Primary)"
                            Type="ButtonType.Submit"
                            PreventDefaultOnSubmit="true"
                            Disabled="@IsSubmitDisabled"
                            Clicked="@SubmitAsync">
                            Opdatér bestilling
                        </Button>
                    </TableRowCell>
                }
            </TableRow>
        </TableFooter>
    </Table>
</form>
