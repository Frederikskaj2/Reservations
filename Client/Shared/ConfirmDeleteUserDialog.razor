<Modal @ref="@modal">
    <ModalBackdrop />
    <Form>
        <ModalContent>
            <ModalHeader>
                <ModalTitle>Bekræft sletning af bruger</ModalTitle>
                <CloseButton Clicked="@Cancel" />
            </ModalHeader>
            <ModalBody>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is4">Mail</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is8">
                        <TextEdit Plaintext="true" Text="@user?.Email" tabindex="-1" />
                    </FieldBody>
                </Field>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.Is4">Navn</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is8">
                        <TextEdit Plaintext="true" Text="@user?.FullName" tabindex="-1" />
                    </FieldBody>
                </Field>
                <Row class="justify-content-end">
                    <Column ColumnSize="ColumnSize.Is8">
                        <Paragraph Color="TextColor.Muted">
                            En bruger slettes ikke så længe brugeren har aktive bestillinger. Sletningen sker først når dette ikke længere er tilfældet.
                        </Paragraph>
                        <Paragraph Color="TextColor.Muted">
                            En bruger som ikke har nogen aktive bestillinger slettes med det samme.
                        </Paragraph>
                    </Column>
                </Row>
            </ModalBody>
            <ModalFooter>
                <Button @ref="@submitButton" Color="Color.Danger" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" Clicked="@Confirm">Slet bruger</Button>
                <Button Color="Color.Secondary" Clicked="@Cancel">Fortryd</Button>
            </ModalFooter>
        </ModalContent>
    </Form>
</Modal>

@code
{

    private Modal modal = null!;
    private Button submitButton = null!;
    private User? user;

    [Parameter]
    public EventCallback<User> OnConfirm { get; set; }

    public void Show(User user)
    {
        this.user = user;
        modal.Show();
        Task.Run(() => submitButton.Focus());
    }

    private Task Confirm()
    {
        modal.Hide();
        return OnConfirm.InvokeAsync(user!);
    }

    private void Cancel() => modal.Hide();

}
