@page "/bestillinger/{orderId:int}"
@inject ApiClient ApiClient
@inject FormattingService FormattingService
@inject NavigationManager NavigationManager

<main>
    @if (!isInitialized)
    {
        <Spinner />
    }
    else if (order != null)
    {
        <Container class="container-min-md">
            <Alert Color="Color.Danger" Visible="@showErrorAlert" Dismisable="true">
                Der er sket en fejl, og bestillingen blev ikke opdateret.
                <CloseButton Clicked="@DismissErrorAlert" />
            </Alert>
            <h1>Bestilling @order!.Id</h1>
            <Text>Oprettet @FormattingService.FormatDate(@order.CreatedTimestamp)</Text>
            <Text><a href="mailto:@order.Email?subject=Frederikskaj 2 bestilling @order.Id">@order.Email</a></Text>
            <Text>@order.FullName</Text>
            <Text>@order.Phone</Text>
            <OrderStatement @ref="orderStatement" IsAdministrator="true" OrderId="@order.Id" AccountNumber="@order.AccountNumber" Reservations="@order.Reservations" Totals="@order.Totals" OnSubmit="@Submit" />
        </Container>
    }
    else if (ownerOrder != null)
    {
        <Container class="container-min-md">
            <Alert Color="Color.Danger" Visible="@showErrorAlert" Dismisable="true">
                Der er sket en fejl, og bestillingen blev ikke opdateret.
                <CloseButton Clicked="@DismissErrorAlert" />
            </Alert>
            <h1>Bestilling @ownerOrder!.Id</h1>
            <Text>Oprettet @FormattingService.FormatDate(@ownerOrder.CreatedTimestamp)</Text>
            <Text>Oprettet af <a href="mailto:@ownerOrder.CreatedByEmail?subject=Frederikskaj 2 bestilling @ownerOrder.Id">@ownerOrder.CreatedByName</a> på vegne af grundejerforeningen</Text>
            <OwnerOrderStatement OrderId="@ownerOrder.Id" Reservations="@ownerOrder.Reservations" OnSubmit="@SubmitOwnerOrder" />
        </Container>
    }
    else
    {
        <Container>
            <Text>Bestilling @OrderId er ikke tilgængelig.</Text>
        </Container>
    }
</main>

@code {

    private OrderStatement orderStatement = null!;
    private Order? order;
    private OwnerOrder? ownerOrder;
    private bool isInitialized;
    private bool showErrorAlert;

    [Parameter]
    public int OrderId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        order = await GetOrder();
        if (order == null)
            ownerOrder = await GetOwnerOrder();
        isInitialized = true;

        async Task<Order?> GetOrder()
        {
            var url = $"orders/{OrderId}";
            var maybe = await ApiClient.GetJsonAsync<OrderResponse<Order>>(url);
            if (maybe.TryGetValue(out var response) && response.Order != null)
                return response.Order;
            return null;
        }

        async Task<OwnerOrder?> GetOwnerOrder()
        {
            var url = $"owner-orders/{OrderId}";
            var maybe = await ApiClient.GetJsonAsync<OrderResponse<OwnerOrder>>(url);
            if (maybe.TryGetValue(out var response) && response.Order != null)
                return response.Order;
            return null;
        }
    }

    private async Task Submit(UpdateOrderRequest request)
    {
        var url = $"orders/{order!.Id}";
        var maybe = await ApiClient.PatchJsonAsync<OrderResponse<Order>>(url, request);
        if (maybe.TryGetValue(out var response) && response.Order != null)
            order = response.Order;
        else
            showErrorAlert = true;
    }

    private async Task SubmitOwnerOrder(UpdateOwnerOrderRequest request)
    {
        var url = $"owner-orders/{ownerOrder!.Id}";
        var maybe = await ApiClient.PatchJsonAsync<OrderResponse<OwnerOrder>>(url, request);
        if (maybe.TryGetValue(out var response) && response.Order != null)
            ownerOrder = response.Order;
        else
            showErrorAlert = true;
    }

    private void DismissErrorAlert() => showErrorAlert = false;
}
