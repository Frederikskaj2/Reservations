@page "/bestillinger/{orderId:int}"
@inject ApiClient ApiClient
@inject FormattingService FormattingService
@inject NavigationManager NavigationManager

<main>
    @if (!isInitialized)
    {
        <Spinner />
    }
    else if (order != null)
    {
        <Container class="container-min-md">
            <Alert Color="Color.Danger" Visible="@showErrorAlert" Dismisable="true">
                Der er sket en fejl, og bestillingen blev ikke opdateret.
                <CloseButton Clicked="@DismissErrorAlert" />
            </Alert>
            <h1>Bestilling @order!.Id</h1>
            <Text>Oprettet @FormattingService.FormatDate(@order.CreatedTimestamp)</Text>
            <Text><a href="mailto:@order.Mail?subject=Frederikskaj 2 bestilling @order.Id">@order.Mail</a></Text>
            <Text>@order.FullName</Text>
            <Text>@order.Phone</Text>
            <OrderStatement @ref="orderStatement" OrderId="@order.Id" AccountNumber="@order.AccountNumber" Reservations="@order.Reservations" Totals="@order.Totals" OnSubmit="@Submit" />
        </Container>
    }
    else
    {
        <Container>
            <Text>Bestilling @OrderId er ikke tilgængelig.</Text>
        </Container>
    }
</main>

@code {

    private OrderStatement orderStatement = null!;
    private Order? order;
    private bool isInitialized;
    private bool showErrorAlert;

    [Parameter]
    public int OrderId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var url = $"orders/{OrderId}";
        var maybe = await ApiClient.GetJsonAsync<OrderResponse<Order>>(url);
        if (maybe.TryGetValue(out var response) && response.Order != null)
            order = response.Order;
        isInitialized = true;
    }

    private async Task Submit(UpdateOrderRequest request)
    {
        var url = $"orders/{order!.Id}";
        var maybe = await ApiClient.PatchJsonAsync<OrderResponse<Order>>(url, request);
        if (maybe.TryGetValue(out var response) && response.Order != null)
            order = response.Order;
        else
            showErrorAlert = true;
    }

    private void DismissErrorAlert() => showErrorAlert = false;
}
