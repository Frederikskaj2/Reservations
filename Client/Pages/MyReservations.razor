@page "/my-reservations"
@attribute [Authorize]
@inject ApiClient ApiClient
@inject FormattingService FormattingService

<main>
    @if (!isInitialized)
    {
        <Spinner />
    }
    else
    {
        <Container class="orders">
            @if (orders!.Any())
            {
                <h1>Aktuelle reservationer</h1>
                @foreach (var order in orders!)
                {
                    <Row>
                        <Column>
                            <Card Background="Background.Light">
                                <CardBody class="order">
                                    <div class="order-header order-main">Ordre-nr.</div>
                                    <div class="order-header order-main">Ordredato</div>
                                    <div class="order-header order-main"></div>
                                    <div class="order-header order-main">Total leje</div>
                                    <div class="order-header order-main">Total rengøring</div>
                                    <div class="order-header order-main">Total depositum</div>
                                    <div class="order-header order-main"></div>
                                    <div class="order-header order-main"></div>
                                    <div class="order-value order-main">@order.Id</div>
                                    <div class="order-value order-main">@FormattingService.FormatDate(order.CreatedTimestamp)</div>
                                    <div class="order-value order-main"></div>
                                    <div class="order-value order-main">@FormattingService.FormatMoneyShort(order.Price!.Rent)</div>
                                    <div class="order-value order-main">@FormattingService.FormatMoneyShort(order.Price!.CleaningFee)</div>
                                    <div class="order-value order-main">@FormattingService.FormatMoneyShort(order.Price!.Deposit)</div>
                                    <div class="order-value order-main"></div>
                                    <div class="order-value order-main"></div>
                                    @foreach (var reservation in order.Reservations!)
                                    {
                                        <div class="order-header order-reservation">Lokale</div>
                                        <div class="order-header order-reservation">Dato</div>
                                        <div class="order-header order-reservation">Antal dage</div>
                                        <div class="order-header order-reservation">Leje</div>
                                        <div class="order-header order-reservation">Rengøring</div>
                                        <div class="order-header order-reservation">Depositum</div>
                                        <div class="order-header order-reservation">Status</div>
                                        <div class="order-header order-reservation order-button">
                                            @if (reservation.CanBeCancelled)
                                            {
                                                <Button Color="Color.Danger" Size="ButtonSize.Small" Clicked="@(() => CancelReservation(reservation))">Annullér</Button>
                                            }
                                        </div>
                                        <div class="order-value order-reservation">@reservation.Resource!.Name</div>
                                        <div class="order-value order-reservation">@FormattingService.FormatDate(reservation.Date)</div>
                                        <div class="order-value order-reservation">@reservation.DurationInDays</div>
                                        <div class="order-value order-reservation">@FormattingService.FormatMoneyShort(reservation.Price!.Rent)</div>
                                        <div class="order-value order-reservation">@FormattingService.FormatMoneyShort(reservation.Price!.CleaningFee)</div>
                                        <div class="order-value order-reservation">@FormattingService.FormatMoneyShort(reservation.Price!.Deposit)</div>
                                        <div class="order-value order-reservation">@GetReservationStatus(reservation)</div>
                                    }
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                }
                <ConfirmCancellationDialog @ref="@confirmCancellationDialog" OnCancel="@CancelConfirmReservationCancellation" OnConfirm="@ConfirmConfirmReservationCancellation" />
            }
            @if (historyOrders!.Any())
            {
                <h1>Tidligere reservationer</h1>
            }
        </Container>
    }
</main>

@code {

    private ConfirmCancellationDialog confirmCancellationDialog = null!;
    private bool isInitialized;
    private IEnumerable<Order>? orders;
    private IEnumerable<HistoryOrder>? historyOrders;

    protected override async Task OnInitializedAsync()
    {
        orders = await ApiClient.GetJsonAsync<IEnumerable<Order>>("orders");
        historyOrders = Enumerable.Empty<HistoryOrder>();
        isInitialized = true;
    }

    private void CancelReservation(Reservation reservation)
    {
        confirmCancellationDialog.Show(reservation);
    }

    private void CancelConfirmReservationCancellation()
    {
        confirmCancellationDialog.Hide();
    }

    private void ConfirmConfirmReservationCancellation(Reservation reservation)
    {
        confirmCancellationDialog.Hide();
        // TODO: Do this for real.
        reservation.Status = ReservationStatus.Cancelled;
        reservation.CanBeCancelled = false;
    }

    private static string GetReservationStatus(Reservation reservation) => reservation.Status switch
    {
        ReservationStatus.Reserved => "Afventer betaling",
        ReservationStatus.Confirmed => "Betalt",
        ReservationStatus.Cancelled => "Annulleret",
        ReservationStatus.Settled => "Afregnet",
        _ => "Ukendt"
    };

}