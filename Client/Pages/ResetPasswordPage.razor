@page "/anmod-om-ny-adgangskode"

@inject ApiClient ApiClient

<main>
    <Container class="container-max-sm">
        <Alert Color="Color.Success" Visible="@showSuccessAlert" Dismisable="true">
            Vi har sendt dig en mail du kan bruge til at oprette en ny adgangskode hvis du i forvejen er oprettet som bruger.
            <CloseButton Clicked="@DismissSuccessAlert" />
        </Alert>
        <Alert Color="Color.Danger" Visible="@showErrorAlert" Dismisable="true">
            Der er sket en fejl, og din mail til at oprette en ny adgangskode er ikke blevet sendt.
            <CloseButton Clicked="@DismissErrorAlert" />
        </Alert>
        <Paragraph>Vi kan sende dig en mail, så du kan få en ny adgangskode.</Paragraph>
        <Form>
            <Validations @ref="validations" Mode="ValidationMode.Manual" Model="@request">
                <Field>
                    <FieldLabel>Mail</FieldLabel>
                    <FieldBody>
                        <Validation>
                            <TextEdit Role="TextRole.Email" @bind-Text="@request.Email">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Validation>
                    </FieldBody>
                </Field>
                <Button Color="Color.Primary" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" Clicked="@SendEmail">Send mail</Button>
            </Validations>
        </Form>
    </Container>
</main>

@code
{
    private readonly SendResetPasswordEmailRequest request = new SendResetPasswordEmailRequest();
    private Validations validations = null!;
    private bool showSuccessAlert;
    private bool showErrorAlert;

    protected async Task SendEmail()
    {
        if (!validations.ValidateAll())
            return;

        validations.ClearAll();
        DismissSuccessAlert();
        DismissErrorAlert();

        var problem = await ApiClient.Post("user/send-reset-password-email", request);
        if (problem == null)
            showSuccessAlert = true;
        else
            showErrorAlert = true;
    }

    private void DismissSuccessAlert() => showSuccessAlert = false;
    private void DismissErrorAlert() => showErrorAlert = false;

}