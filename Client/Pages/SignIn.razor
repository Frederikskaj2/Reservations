@page "/sign-in"
@inject ApiClient ApiClient
@inject ApplicationState ApplicationState
@inject NavigationManager NavigationManager
@inject ServerAuthenticationStateProvider AuthenticationStateProvider

<main>
    <div class="form-container">
        <Alert Color="Color.Danger" IsShow="@showInvalidEmailOrPasswordAlert">
            <CloseButton Clicked="@DismissInvalidEmailOrPasswordAlert" />
            Forkert mail eller adgangskode. <a href="/user/send-password-reset-email">Vi kan sende dig en mail, så du kan få en ny adgangskode.</a>
        </Alert>
        <Alert Color="Color.Danger" IsShow="@showErrorAlert">
            <CloseButton Clicked="@DismissErrorAlert" />
            Der er sket en fejl. Du blev ikke logget ind.
        </Alert>
        <Validations @ref="validations" Mode="ValidationMode.Manual" Model="@request">
            <Field>
                <FieldLabel>Mail</FieldLabel>
                <FieldBody>
                    <Validation>
                        <TextEdit Role="TextRole.Email" @bind-Text="@request.Email">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </Validation>
                </FieldBody>
            </Field>
            <Field>
                <FieldLabel>Adgangskode</FieldLabel>
                <FieldBody>
                    <Validation>
                        <TextEdit Role="TextRole.Password" @bind-Text="@request.Password">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </TextEdit>
                    </Validation>
                </FieldBody>
            </Field>
            <Field>
                <CheckEdit @bind-Checked="@request.IsPersistent">Husk mig</CheckEdit>
            </Field>
            <Button Color="Color.Primary" Clicked="@Submit">Log ind</Button>
        </Validations>
    </div>
    <div class="form-container">
        <p>Hvis du ikke har en bruger kan du oprette dig.</p>
        <p><button class="btn btn-secondary" type="button" @onclick="SignUp">Opret bruger</button></p>
    </div>
</main>

@code {

    private readonly SignInRequest request = new SignInRequest();
    private bool showInvalidEmailOrPasswordAlert;
    private bool showErrorAlert;
    Validations validations = null!;

    private async Task Submit()
    {
        if (!validations.ValidateAll())
            return;

        validations.ClearAll();
        DismissInvalidEmailOrPasswordAlert();
        DismissErrorAlert();

        var maybe = await ApiClient.PostJsonAsync<SignInResponse>("user/sign-in", request);
        if (maybe.TryGetValue(out var response))
        {
            if (response.Result == SignInResult.Success)
            {
                AuthenticationStateProvider.UpdateUser(response.User!);
                if (ApplicationState.RedirectUrl != null)
                {
                    var redirectUrl = ApplicationState.RedirectUrl;
                    ApplicationState.RedirectUrl = null;
                    NavigationManager.NavigateTo(redirectUrl);
                }
                else
                {
                    NavigationManager.NavigateTo("");
                }
            }
            else if (response.Result == SignInResult.InvalidEmailOrPassword)
            {
                showInvalidEmailOrPasswordAlert = true;
                return;
            }
        }
        showErrorAlert = true;
    }

    private void DismissInvalidEmailOrPasswordAlert() => showInvalidEmailOrPasswordAlert = false;

    private void DismissErrorAlert() => showErrorAlert = false;

    private void SignUp() => NavigationManager.NavigateTo("sign-up");

}
