@page "/ny-adgangskode/{email}/{token}"
@inject ApiClient ApiClient

<main>
    <Container class="container-max-sm">
        <Alert Color="Color.Success" Visible="@showSuccessAlert">
            Din adgangskode er blevet ændret. <a href="@Urls.SignIn">Log ind</a> for at reservere et lokale.
        </Alert>
        <Alert Color="Color.Danger" Visible="@showErrorAlert" Dismisable="true">
            Der er sket en fejl, og din adgangskode blev ikke ændret.
            <PasswordErrors PasswordTooShort="errors.HasFlag(NewPasswordErrorCodes.PasswordTooShort)"
                            PasswordRequiresLower="errors.HasFlag(NewPasswordErrorCodes.PasswordRequiresLower)"
                            PasswordRequiresUpper="errors.HasFlag(NewPasswordErrorCodes.PasswordRequiresUpper)"
                            PasswordRequiresDigit="errors.HasFlag(NewPasswordErrorCodes.PasswordRequiresDigit)"
                            PasswordRequiresNonAlphanumeric="errors.HasFlag(NewPasswordErrorCodes.PasswordRequiresNonAlphanumeric)"
                            PasswordRequiresUniqueChars="errors.HasFlag(NewPasswordErrorCodes.PasswordRequiresUniqueChars)" />
            <CloseButton Clicked="@DismissErrorAlert" />
        </Alert>
        <Form>
            <Validations @ref="validations" Mode="ValidationMode.Manual" Model="@request">
                <Field>
                    <FieldLabel>Ny adgangskode</FieldLabel>
                    <FieldBody>
                        <Validation>
                            <TextEdit Role="TextRole.Password" @bind-Text="@request.NewPassword">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Validation>
                    </FieldBody>
                </Field>
                <Field>
                    <FieldLabel>Gentag adgangskode</FieldLabel>
                    <FieldBody>
                        <Validation>
                            <TextEdit Role="TextRole.Password" @bind-Text="@request.ConfirmNewPassword">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Validation>
                    </FieldBody>
                </Field>
                <Button Color="Color.Primary" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" Clicked="@Submit" class="btn-text">Opret ny adgangskode</Button>
            </Validations>
        </Form>
    </Container>
</main>

@code {

    private readonly NewPasswordRequest request = new NewPasswordRequest();
    private Validations validations = null!;
    private bool showSuccessAlert;
    private bool showErrorAlert;
    private NewPasswordErrorCodes errors;

    [Parameter]
    public string Email { get; set; } = null!;

    [Parameter]
    public string Token { get; set; } = null!;

    private async Task Submit()
    {
        if (!validations.ValidateAll())
            return;

        validations.ClearAll();
        DismissErrorAlert();

        request.Email = Email;
        request.Token = Token;
        var maybe = await ApiClient.PostJsonAsync<NewPasswordResponse>("user/new-password", request);
        if (maybe.TryGetValue(out var response))
        {
            if (!response.Errors.HasValue)
            {
                showSuccessAlert = true;
                return;
            }
            errors = response.Errors.Value;
        }
        showErrorAlert = true;
    }

    private void DismissErrorAlert() => showErrorAlert = false;

}